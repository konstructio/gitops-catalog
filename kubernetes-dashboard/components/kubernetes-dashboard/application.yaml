---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: <CLUSTER_NAME>-kubernetes-dashboard
  namespace: argocd
  annotations:
    kubefirst.konstruct.io/application-name: kubernetes-dashboard
    kubefirst.konstruct.io/source: catalog-templates
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: <PROJECT>
  sources:
    - repoURL: "https://kubernetes.github.io/dashboard"
      targetRevision: 7.12.0
      chart: kubernetes-dashboard
      helm:
        valueFiles:
          - $values/registry/clusters/<CLUSTER_NAME>/components/kubernetes-dashboard/values.yaml
    - repoURL: <GITOPS_REPO_URL>
      targetRevision: HEAD
      ref: values
    - repoURL: <GITOPS_REPO_URL>
      path: registry/clusters/<CLUSTER_NAME>/components/kubernetes-dashboard/dependencies/
      targetRevision: HEAD
  destination:
    name: <CLUSTER_DESTINATION>
    namespace: kubernetes-dashboard
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
 apiVersion: networking.k8s.io/v1
 kind: Ingress
 metadata:
   annotations:
     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
     cert-manager.io/cluster-issuer: letsencrypt-prod
     argocd.argoproj.io/sync-wave: '1'
   name: kubernetes-dashboard
   namespace: kubernetes-dashboard
 spec:
   ingressClassName: nginx
   rules:
     - host: kubernetes-dashboard-<CLUSTER_NAME>.<DOMAIN_NAME>
       http:
         paths:
           - backend:
               service:
                 name: <CLUSTER_NAME>-kubernetes-dashboard-kong-proxy
                 port:
                   number: 443
             path: /
             pathType: Prefix
   tls:
     - hosts:
         - kubernetes-dashboard-<CLUSTER_NAME>.<DOMAIN_NAME>
       secretName: kubernetes-dashboard-tls
